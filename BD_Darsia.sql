###CREA BASE DE DATOS
DROP DATABASE IF EXISTS DARSIA;
CREATE DATABASE IF NOT EXISTS DARSIA;

###ABRE BASE DE DATOS
USE Darsia;

###ELIMINAANDO TABLAS
DROP TABLE IF EXISTS Account;
DROP TABLE IF EXISTS Pj;
DROP TABLE IF EXISTS Race;
DROP TABLE IF EXISTS Stat;
DROP TABLE IF EXISTS Ability;
DROP TABLE IF EXISTS Speciality;
DROP TABLE IF EXISTS Class;
DROP TABLE IF EXISTS City;
DROP TABLE IF EXISTS Map;
DROP TABLE IF EXISTS Spot;
DROP TABLE IF EXISTS Item;
DROP TABLE IF EXISTS NPC;

DROP TABLE IF EXISTS rAccountPj;
DROP TABLE IF EXISTS rPjCity;
DROP TABLE IF EXISTS rCityMap;
DROP TABLE IF EXISTS rPjSpot;
DROP TABLE IF EXISTS rMapSpot;
DROP TABLE IF EXISTS rSpotMap;
DROP TABLE IF EXISTS rSpotItem;
DROP TABLE IF EXISTS rInv;
DROP TABLE IF EXISTS rPjClass;
DROP TABLE IF EXISTS rPjRace;
DROP TABLE IF EXISTS rPjStat;
DROP TABLE IF EXISTS rPjAb;
DROP TABLE IF EXISTS rRaceStat;
DROP TABLE IF EXISTS rClassSpec;
DROP TABLE IF EXISTS rSpecAb;
DROP TABLE IF EXISTS rRaceStat;
DROP TABLE IF EXISTS rAbStat;
DROP TABLE IF EXISTS rItemStat;
DROP TABLE IF EXISTS rSpotStat;
DROP TABLE IF EXISTS rNPCItem;
DROP TABLE IF EXISTS rNPCStat;
DROP TABLE IF EXISTS rNPCSpot;

###CREANDO TABLAS

#ENTIDADES
CREATE TABLE IF NOT EXISTS Account(
idAccount INT UNSIGNED AUTO_INCREMENT,
user VARCHAR(25),
pass VARCHAR(25),
email VARCHAR(64),
CONSTRAINT PK_Account PRIMARY KEY (idAccount)
);

CREATE TABLE IF NOT EXISTS Pj(
idPj INT UNSIGNED AUTO_INCREMENT,
name VARCHAR(25),
sex BOOLEAN,
lvl INT UNSIGNED,
XP INT INSIGNED,
honor INT,
title VARCHAR(250),
INT INT UNSIGNED,
STR INT UNSIGNED,
DES INT UNSIGNED,
abPoint INT UNSIGNED,
CONSTRAINT PK_Pj PRIMARY KEY (idPj)
);

CREATE TABLE IF NOT EXISTS Race(
idRace INT UNSIGNED AUTO_INCREMENT,
name VARCHAR(25),
img URL(25),
description TEXT,
CONSTRAINT PK_Race PRIMARY KEY (idRace)
);

CREATE TABLE IF NOT EXISTS Stat(

);

#RELACIONES
CREATE TABLE IF NOT EXIST rAccountPj(
idRAccountPj INT UNSIGNED AUTO_INCREMENT NOT NULL,
idAccount INT UNSIGNED NOT NULL,
idPj INT UNSIGNED NOT NULL,
CONSTRAINT PK_rAccountPj PRIMARY KEY (idRAccountPj),
CONSTRAINT FK_rAccountPj_Account FOREIGN KEY (idAccount) REFERENCES Account(idAccount),
CONSTRAINT FK_rAccountPj_Pj FOREIGN KEY (idPj) REFERENCES Pj(idPj)
);

CREATE TABLE IF NOT EXISTS Privilege(
namePrivilege VARCHAR(128),
isBlock BOOLEAN,
CONSTRAINT PK_Privilege PRIMARY KEY (namePrivilege));

CREATE TABLE IF NOT EXISTS Surfer(
username VARCHAR(128),
pass VARCHAR(128),
namePrivilege VARCHAR(128) NOT NULL,
CONSTRAINT PK_Surfer PRIMARY KEY (username),
CONSTRAINT FK_Surfer_Privilege FOREIGN KEY (namePrivilege) REFERENCES Privilege(namePrivilege));

CREATE TABLE IF NOT EXISTS Rule(
nameURL VARCHAR(128),
idRule INT UNSIGNED AUTO_INCREMENT,
isContent BOOLEAN,
description TEXT,
allow BOOLEAN,
rFrom TIME,
rTo TIME,
CONSTRAINT PK_Rule PRIMARY KEY (idRule));

CREATE TABLE IF NOT EXISTS ActiveUser(
idActiveUser INT UNSIGNED AUTO_INCREMENT,
ipSurfer VARCHAR(15),
nameSurfer VARCHAR(128),
CONSTRAINT PK_ActiveUser PRIMARY KEY (idActiveUser),
CONSTRAINT FK_ActiveUser_Surfer FOREIGN KEY (nameSurfer) REFERENCES Surfer(username));

CREATE TABLE IF NOT EXISTS RuleList(
privilegeAsigned VARCHAR(128),
ruleAsigned INT UNSIGNED,
FOREIGN KEY (privilegeAsigned) REFERENCES Privilege(namePrivilege),
FOREIGN KEY (ruleAsigned) REFERENCES Rule(idRule));

CREATE TABLE IF NOT EXISTS Content(
nameContent VARCHAR(128),
urlList TEXT,
CONSTRAINT PK_Content PRIMARY KEY (nameContent));
